name: Test

on:
  push:
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  dummy:
    runs-on: ubuntu-latest
    steps:
    - run: echo hi
  debug:
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "github.event_name: [ ${{ github.event_name }} ]"'
      - run: 'echo "github.event_name: [ ${{ github.ref_type }} ]"'
      - run: 'echo "github.event.workflow_run.conclusion: [ ${{ github.event.workflow_run.conclusion }} ]"'
      - run: 'echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"'
      - run: 'echo "Tag name from github.ref_name: ${{  github.ref_name }}"'
      - run: "echo 'condition 1: [ ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }} ]'"
      - run: "echo 'condition 2: [ ${{ github.ref_type == 'tag' }} && (${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}) ]'"
  check-images-are-used:
    if: ${{ github.ref_type == 'tag' }}
    needs: [dummy]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [nginx, service]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/central-${{ matrix.image }}
      - name: "Checking release image is referenced in docker-compose.yml..."
        run: 'grep "${{ steps.meta.outputs.tags }}" docker-compose.yml'

  build-push-image:
    needs: check-images-are-used
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        image: [nginx, service]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/central-${{ matrix.image }}

      - name: Set up QEMU emulator for multi-arch images
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push ${{ matrix.image }} Docker image
        uses: docker/build-push-action@v5
        with:
            file: ${{ matrix.image }}.dockerfile
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: 'linux/amd64,linux/arm64'
