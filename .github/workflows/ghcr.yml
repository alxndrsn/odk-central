name: GHCR

on:
  # See: https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#workflow_run
  workflow_run:
    workflows: [Test]
    types: [completed]
    tags: ["v*.*.*"]
  workflow_dispatch:
  # disable later:
  push:
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  build-push-image:
    # Only run this job if tests pass.  See workflow_run definition above.
    # TODO remove unused part os this
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        image: [nginx, service]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/central-${{ matrix.image }}

      - name: Confirm version numbers
        run: 'echo "TODO Expected version: ${{ steps.meta.outputs.tags }}"'

      #- name: Log into registry ${{ env.REGISTRY }}
      #  uses: docker/login-action@v3
      #  with:
      #    registry: ${{ env.REGISTRY }}
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GITHUB_TOKEN }}

      #- name: Set up QEMU emulator for multi-arch images
      #  uses: docker/setup-qemu-action@v3

      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3

      #- name: Build and push ${{ matrix.image }} Docker image
      #  uses: docker/build-push-action@v5
      #  with:
      #      file: ${{ matrix.image }}.dockerfile
      #      context: .
      #      push: true
      #      tags: ${{ steps.meta.outputs.tags }}
      #      labels: ${{ steps.meta.outputs.labels }}
      #      platforms: 'linux/amd64,linux/arm64'
